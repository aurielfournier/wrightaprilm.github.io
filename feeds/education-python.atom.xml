<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Wrighting April</title><link href="http://wrightaprilm.github.io/" rel="alternate"></link><link href="http://wrightaprilm.github.io/feeds/education-python.atom.xml" rel="self"></link><id>http://wrightaprilm.github.io/</id><updated>2014-05-22T04:40:00-05:00</updated><entry><title>Wrap-up</title><link href="http://wrightaprilm.github.io/posts/ccbb_wrap.html" rel="alternate"></link><updated>2014-05-22T04:40:00-05:00</updated><author><name>April Wright</name></author><id>tag:wrightaprilm.github.io,2014-05-22:posts/ccbb_wrap.html</id><summary type="html">&lt;p&gt;This week was the CCBB's first ever Big Data in Biology summer school. I was the Python instructor. 4x3-hour-days, 16 students. Fun.&lt;/p&gt;
&lt;p&gt;What worked:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Topics: I think we had a good covering of what really matters in programming&lt;/li&gt;
&lt;li&gt;Red/Green stickies: Red sticky on laptop = trouble, green = all good. Really efficient.&lt;/li&gt;
&lt;li&gt;Bite-sized materials. I largely did one markdown document per topic (one on Pandas importing and slicing, one on missing data filtration and replacement, one on plotting). Helped keep me on track, ensure exercise breaks and keep the schedule moving.&lt;/li&gt;
&lt;li&gt;Integrating testing: I think by-and-large, most people were comfortable with the logic of self-skepticism by the end of the course, even if we didn't get to actual formal testing.&lt;/li&gt;
&lt;li&gt;Class size: We never had so many people to help that two of us couldn't manage efficiently.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What didn't:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Installs: I know other instructors don't support Windows, and it's tempting to just give up. I do feel like GitBash is a big help on this front, but working at the interpreter in iPython was persistently a problem. &lt;/li&gt;
&lt;li&gt;Trying to go off-script: I should really know by now that if I go off-script and something doesn't work out, I will get mad flustered. But I don't know this. And I try it all the time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Neutral:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Git: Still kind of much for novices. Since this was a Python course, we more-or-less used it to disseminate materials. I'm not sure I would do try this way of managing materials again without a full session on Git. But ... multiple people had started their own repos for personal scripts and were pushing to them by the end of the workshop. So unclear.&lt;/li&gt;
&lt;li&gt;The room: It was nice, I think the temperature was generally nice, and it had appropriate hook-ups for my computer. Screen mirroring had a slick set-up, too. But power strips were an issue.&lt;/li&gt;
&lt;li&gt;The schedule: There was some pretty obvious fatigue, particularly among students who were taking morning classes by the end. Not sure how to manage this, because I do think all the stuff we went over was important. I saved regex for the last day, since those are easy to visually understand via RegexPal.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overall, I had a good time. We'll see in a couple weeks what the students thought.&lt;/p&gt;</summary><category term="education"></category><category term="python"></category></entry><entry><title>Day One</title><link href="http://wrightaprilm.github.io/posts/day_one.html" rel="alternate"></link><updated>2014-05-19T11:15:00-05:00</updated><author><name>April Wright</name></author><id>tag:wrightaprilm.github.io,2014-05-19:posts/day_one.html</id><summary type="html">&lt;h2&gt;What worked&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Base Python: People generally found Python intuitive &lt;/li&gt;
&lt;li&gt;Hands-On: We did a lot of hands-on (about 25 minute per hour, plus a break every hour and a half)&lt;/li&gt;
&lt;li&gt;Minute papers: We  got a lot of good feedback from these&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What didn't&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Installs: A few people hadn't installed things&lt;/li&gt;
&lt;li&gt;Git: I think this was a little much for first thing for total novices, but we mostly got this working&lt;/li&gt;
&lt;li&gt;I got turned around and a bit flustered with helping people in the start, getting everyone used to the course website + etherpad. I still get flustered.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What's up tomorrow:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Syncing course repos with personal, and pushing a first bit of text&lt;/li&gt;
&lt;li&gt;Reviewing exercises from yesterday&lt;/li&gt;
&lt;li&gt;File I/O&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Learning is fun!" src="./../pictures/ccbbdayone.jpg" /&gt;&lt;/p&gt;</summary><category term="education"></category><category term="python"></category></entry><entry><title>Integrating testing in a zero-entry framework</title><link href="http://wrightaprilm.github.io/posts/integrating-testing-in-a-zero-entry-framework.html" rel="alternate"></link><updated>2014-05-10T12:27:00-05:00</updated><author><name>April Wright</name></author><id>tag:wrightaprilm.github.io,2014-05-10:posts/integrating-testing-in-a-zero-entry-framework.html</id><summary type="html">&lt;h2&gt;Ch-ch-changes&lt;/h2&gt;
&lt;p&gt;I've mentioned in passing before that the &lt;a href="http://ccbb.biosci.utexas.edu/"&gt;CCBB&lt;/a&gt; is ramping up its &lt;a href="http://ccbb.biosci.utexas.edu/training.html"&gt;course offerings&lt;/a&gt;. One of the new offerings is the &lt;a href="http://ccbb.biosci.utexas.edu/summerschool.html"&gt;Big Data in Biology Summer School&lt;/a&gt;. I'm instructing a Python &lt;a href="http://ccbb.biosci.utexas.edu/summerschool.html#Python"&gt;session&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I want to try some new things.&lt;/p&gt;
&lt;h2&gt;Teaching to the test&lt;/h2&gt;
&lt;p&gt;We also teach testing in our working group. But it generally comes in quite late, and I've never been super pleased about this. This time around, we're going to start right away with some testing lite. No libraries, just some simple one function, one test programming. &lt;/p&gt;
&lt;p&gt;There's no reason that even a novice programmer can't do test-driven development. If you want your function to return whole numbers to be used in a later computation, anyone can do a simple check that their output is made of integers. If you're looking to return a value between zero and one, that's easy to check, as well. There's no reason to hold off on integrating the logic of unit testing: What &lt;em&gt;must&lt;/em&gt; be true about this output for it to be usable? What must be true about my input for my computation to function?&lt;/p&gt;
&lt;p&gt;Simple data checking is something that is easy to implement early and often. Self-skepticism about our results is a skill I can either build or scare into students. Actual testing libraries can be covered at the end of the course. Not that anyone is going to use them, anyway.&lt;/p&gt;
&lt;p&gt;My plan is that for the first exercises, there are no tests. Then, I'll ask them to add a simple test of something specific (such as, add a line of code that ensures your output is a number, and prints a nasty message if it isn't). On the next assignment, I'll leave it more vague (Decide what must be true about the output of your function and test it). And lastly, the training wheels come off and I tell them to test as appropriate in their script. &lt;/p&gt;
&lt;p&gt;I think I can pull this off. Is anyone else teaching test-driven development for novices?&lt;/p&gt;</summary><category term="education"></category><category term="python"></category></entry><entry><title>SSC Short Course Wrap Up</title><link href="http://wrightaprilm.github.io/posts/ssc_wrap.html" rel="alternate"></link><updated>2014-02-25T09:15:00-06:00</updated><author><name>April Wright</name></author><id>tag:wrightaprilm.github.io,2014-02-25:posts/ssc_wrap.html</id><summary type="html">&lt;h3&gt;Thanks so much to all the participants in the SSC spring Python short course&lt;/h3&gt;
&lt;p&gt;Materials can be found &lt;a href="../../CourseMaterials.zip"&gt;here&lt;/a&gt;
Answers, equipment set-up and FAQs can be found &lt;a href="../../post-class.zip"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="education"></category><category term="python"></category><category term=""></category></entry></feed>